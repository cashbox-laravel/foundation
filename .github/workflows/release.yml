name: Release

on:
    release:
        types:
            - released
        tags:
            - v4.*

jobs:
    configure:
        runs-on: ubuntu-latest
        
        name: Configure
        
        outputs:
            matrix: ${{ steps.set-matrix.outputs.matrix }}
            tag: ${{ steps.ids.outputs.tag }}
        
        steps:
            -   name: Checkout code
                uses: actions/checkout@v4

            -   name: Setup GIT
                uses: frankdejonge/use-github-token@1.1.0
                with:
                    authentication: '${{ secrets.COMPOSER_USERNAME }}:${{ secrets.COMPOSER_TOKEN }}'
                    user_name: 'Andrey Helldar'
                    user_email: 'helldar@dragon-code.pro'

            -   name: Set matrix data
                id: set-matrix
                run: echo "matrix=$(jq -c . < ./split.json)" >> $GITHUB_OUTPUT

            -   name: Get version
                id: ids
                run: |
                    TAG=${{ github.event.release.tag_name }}
                    
                    echo "tag=v${TAG##*v}" >> "$GITHUB_OUTPUT"
    
    release:
        runs-on: ubuntu-latest
        needs: configure
        
        strategy:
            fail-fast: true
            matrix: ${{ fromJson(needs.configure.outputs.matrix) }}
        
        name: ${{ matrix.sub-splits.name }}
        
        steps:
            -   name: Authorize
                id: authorize
                run: |
                    ALLOW=${{ contains(toJson(matrix.sub-splits), 'release') == false || matrix.sub-splits.release }}
                    
                    echo "release=${ALLOW}" >> "$GITHUB_OUTPUT"

            -   name: Component release
                if: ${{ steps.authorize.outputs.release }}
                run: |
                    echo "${{ matrix.sub-splits.name }}"
                    echo "${{ matrix.sub-splits.target }}"
                    
                    TMP_DIR="/tmp/cashier-split"
                    
                    rm -rf $TMP_DIR;
                    mkdir $TMP_DIR;
                    
                    (
                        cd $TMP_DIR;
                    
                        git clone ${{ matrix.sub-splits.target }} .
                        git checkout "main"
                    
                        git tag ${{ needs.configure.outputs.tag }}
                        git push origin --tags
                    )
